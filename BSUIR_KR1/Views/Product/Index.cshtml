@model ListModel<Product>
@{
    ViewData["Title"] = "Блюда дня";
    var categories = (List<Category>)ViewData["Categories"];
    var currentCategory = (string)ViewData["CurrentCategory"];
    var request = ViewContext.HttpContext.Request;
    var returnUrl = request.Path + request.QueryString.ToUriComponent();
}

<h2 class="my-4">@ViewData["Title"]</h2>

<div class="row mb-4">
    <div class="col-12">
        <div class="dropdown">
            <button class="btn btn-outline-secondary dropdown-toggle" type="button" id="categoryDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                @currentCategory
            </button>
            <ul class="dropdown-menu" aria-labelledby="categoryDropdown">
                <li><a class="dropdown-item" asp-controller="Product" asp-action="Index">Все</a></li>
                @foreach (var category in categories)
                {
                    <li><a class="dropdown-item" asp-controller="Product" asp-action="Index" asp-route-category="@category.NormalizedName">@category.Name</a></li>
                }
            </ul>
        </div>
    </div>
</div>

<div class="row row-cols-1 row-cols-md-3 g-4 mb-4">
    @foreach (var product in Model.Items)
    {
        <div class="col">
            <div class="card h-100">
                <img src="https://localhost:7176/@product.Image" class="card-img-top" alt="@product.Name" style="height: 200px; object-fit: cover;">
                <div class="card-body">
                    <h5 class="card-title">@product.Name</h5>
                    <p class="card-text">@product.Description</p>
                    <div class="d-flex justify-content-between align-items-center">
                        <span class="badge bg-secondary">@product.Price калорий</span>
                        <a asp-controller="Cart" asp-action="Add" asp-route-id="@product.Id" asp-route-returnUrl="@returnUrl" class="btn btn-primary">
                            Add to cart
                        </a>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@if (Model.TotalPages > 1)
{
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            @{
                var prevPage = Model.CurrentPage > 1 ? Model.CurrentPage - 1 : 1;
                var nextPage = Model.CurrentPage < Model.TotalPages ? Model.CurrentPage + 1 : Model.TotalPages;
            }

            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                <a class="page-link" asp-route-pageNo="@prevPage" asp-route-category="@ViewContext.RouteData.Values["category"]">«</a>
            </li>

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                    <a class="page-link" asp-route-pageNo="@i" asp-route-category="@ViewContext.RouteData.Values["category"]">@i</a>
                </li>
            }

            <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                <a class="page-link" asp-route-pageNo="@nextPage" asp-route-category="@ViewContext.RouteData.Values["category"]">»</a>
            </li>
        </ul>
    </nav>
}